Colonnes DB1 (infos personnes) : IDPersonne, Nom, Prenom, NumeroEtudiant, NumeroCarte, Email
Colonnes DB2 (cours) : IDCours, Prof, Assistant, NomCours
Colonnes DB3 (présences) : Date, IDCours, IDsPersonnes

Appli (form) : flutter
Serveur : backend python avec aiohttp, gestion de la DB avec tortoise-orm
DB : SQLite
Proxmark : Script shell (devrait fonctionner sur un Raspberry pi, pour le style)

Déroulement appli : 
0. (première ouverture) inscription (qui suis-je -> Nom prénom email numEtudiant stockés fixement dans l'appli)
1. ouverture appli
2. form qui demande le cours (automatique ?)
3. envoi au serv central, demande confirmation
4. confirmation sur l'appli

Déroulement borne raspberry pi + proxmark : 
1. plaçage de la carte sur le lecteur
2A. Si première fois, demande de match avec nom prénom, num étudiant -> envoi serv central
2B. Si pas première fois, envoi serv central avec juste le num proxmark
(3.) confirmation ? (led/bruit)

Déroulement site : 
1. login avec compte unifr
2. choisir cours, confirmer présence
3. envoi serv centrale, demande confirmation
4. confirmation à l'écran

Déroulement :
a. DONE faire marcher tortoise avec le site à nouveau
b. DONE faire les templates html et les remplir des infos necessaires
c. DONE faire marcher la borne proxmark
d. DONE faire communiquer la borne avec le site
e. DONE faire l'appli

A faire : 
Small : 
- le login sur l'appli ne devrait se passer qu'une fois (on crée le compte sur le site, on lock la page profile)

Big :
- mailing system
- new page to signal first / second-level contact with an infected personnes
- link the two by querying DB
- styling & decoration